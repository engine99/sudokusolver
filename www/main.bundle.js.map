{"version":3,"sources":["C:/Users/DTM/SudokuSolver/sudoku-solver/src/$_lazy_route_resource lazy","C:/Users/DTM/SudokuSolver/sudoku-solver/src/app/app.component.css","C:/Users/DTM/SudokuSolver/sudoku-solver/src/app/app.component.html","C:/Users/DTM/SudokuSolver/sudoku-solver/src/app/app.component.ts","C:/Users/DTM/SudokuSolver/sudoku-solver/src/app/app.module.ts","C:/Users/DTM/SudokuSolver/sudoku-solver/src/environments/environment.ts","C:/Users/DTM/SudokuSolver/sudoku-solver/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/DTM/SudokuSolver/sudoku-solver/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/DTM/SudokuSolver/sudoku-solver/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"gameboard\\\">\\n<table class=\\\"gametable\\\">\\n\\t<tr *ngFor=\\\"let y1 of [0,1,2]\\\">\\n\\t\\t<td *ngFor=\\\"let x1 of [0,1,2]\\\" >\\n\\t\\t\\t<table class=\\\"blocktable\\\">\\n\\t\\t\\t\\t<tr *ngFor=\\\"let y2 of [0,1,2]\\\">\\n\\t\\t\\t\\t\\t<td *ngFor=\\\"let x2 of [0,1,2]\\\" (click)=\\\"tapCell(indexOf(x1, y1, x2, y2))\\\">\\n\\t\\t\\t\\t\\t\\t<span [style.display]=\\\"data[indexOf(x1, y1, x2, y2)] < 1 ? 'none' : 'inline'\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{data[indexOf(x1, y1, x2, y2)]}}\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</table>\\n\\t\\t</td>\\n\\t</tr>\\t\\n</table>\\n</div>\\n<div class=\\\"navigation\\\">\\n\\t<button id=\\\"goButton\\\" (click)=attack()>Attack</button>\\t\\n\\t<button id=\\\"clearButton\\\" (click)=clear()>Clear</button>\\n\\t<button id=\\\"resetButton\\\" (click)=setSample()>setSample</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/DTM/SudokuSolver/sudoku-solver/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Sudoku Solver';\r\n\r\n  // game board data. zero indicates 'none selected'\r\n  sampleData: number[] =\r\n  [8, 5, 6, 0, 1, 4, 7, 3, 0,\r\n  0, 9, 0, 0, 0, 0, 0, 0, 0,\r\n  2, 4, 0, 0, 0, 0, 1, 6, 0,\r\n  0, 6, 2, 0, 5, 9, 3, 0, 0,\r\n  0, 3, 1, 8, 0, 2, 4, 5, 0,\r\n  0, 0, 5, 3, 4, 0, 9, 2, 0,\r\n  0, 2, 4, 0, 0, 0, 0, 7, 3,\r\n  0, 0, 0, 0, 0, 0, 0, 1, 0,\r\n  0, 1, 8, 6, 3, 0, 2, 9, 4];\r\n\r\n  data: number[];\r\n\r\n  constructor() {\r\n    this.clear();\r\n  }\r\n\r\n  // clear the game board\r\n  clear() {\r\n    this.data = Array(81).fill(0);\r\n  }\r\n\r\n  // preset the gameboard to some sample data\r\n  setSample() {\r\n    this.data = this.sampleData.slice();\r\n  }\r\n\r\n  indexOf(x1: number, y1: number, x2: number, y2: number): number {\r\n    return (y1 * 3 + y2) * 9 + (x1 * 3) + x2;\r\n  }\r\n\r\n  // handle cell tapping. Increment that cell\r\n  tapCell(index: number) { this.data[index] = (this.data[index] + 1) % 10; }\r\n\r\n\r\n\r\n\r\n\r\n  // solve the sudoku, if possible, and update the gameboard if a solution is found\r\n  attack() {\r\n\r\n    // start the search tree\r\n    const myIdea: number[] = this.attack2(new Array());\r\n\r\n    // if a solution was found, copy it to the game board\r\n    if (myIdea != null) {\r\n      this.data = myIdea;\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Find a complete solution given a partial solution. Return the first complete solution found (dfs) or null if none possible.\r\n   * Ideas are numbers to fill in to the zeroes on the game board starting with the top left.\r\n   * In this method. Find the possible values for the next zero given existing ideas, and recurse for each.\r\n   */\r\n  attack2(ideas: number[]): number[] {\r\n\r\n    // Used to count the number of zeroes in the game board\r\n    let ideaIndex = 0;\r\n\r\n    // Make a copy of the game board and fill in the zeroes with any ideas so far\r\n    const myData = new Array(81);\r\n\r\n    let headIndex = -1;\r\n\r\n    // Make a copy of data ... and fill in the ideas\r\n    for (let index = 0; index < 81; index++) {\r\n      if (this.data[index] > 0 ) {\r\n        myData[index] = this.data[index];\r\n      } else if (ideaIndex < ideas.length ) {\r\n        myData[index] = ideas[ideaIndex++];\r\n      } else {\r\n        ideaIndex++;\r\n        myData[index] = 0;\r\n        if (headIndex === -1) {\r\n          headIndex = index;\r\n        }\r\n      }\r\n    }\r\n\r\n   // This cell cannot be any that exists in the block, the row or the column\r\n   const takenByBlock = this.getTakenByBlock(myData, headIndex);\r\n   const takenByRow = this.getTakenByRow(myData, headIndex);\r\n   const takenByCol = this.getTakenByCol(myData, headIndex);\r\n   const taken = takenByBlock.concat(takenByRow).concat(takenByCol);\r\n\r\n   for (let i = 1; i < 10; i++) {\r\n     if (!taken.includes(i)) {\r\n       // This is the end condition - have just solved the last zero\r\n       if (ideaIndex === ideas.length + 1) {\r\n         myData[headIndex] = i;\r\n         return myData;\r\n       }\r\n       // Recurse using the new partial result\r\n       const search = this.attack2(ideas.concat(i));\r\n       if (search != null) {\r\n         // If a solution was found, return it right away\r\n         return search;\r\n       }\r\n     }\r\n   }\r\n   return null;\r\n  }\r\n\r\n  // get the non-zero (taken) numbers that are in the same block as myIndex\r\n  getTakenByBlock(idea: number[], myIndex: number): number[] {\r\n    // which block?\r\n    const myBlockX = Math.floor((myIndex % 9) / 3);\r\n    const myBlockY = Math.floor(myIndex / 27);\r\n    // what are the numbers in my block?\r\n    return  idea.filter((value, index) => Math.floor((index % 9) / 3) === myBlockX && Math.floor(index / 27) === myBlockY);\r\n  }\r\n\r\n  // get the non-zero (taken) numbers that are in the same column as myIndex\r\n  getTakenByCol(idea: number[], myIndex: number): number[] {\r\n    // which col?\r\n    const myX = myIndex % 9;\r\n    // what are the numbers in my col?\r\n    return idea.filter((value, index) => index % 9 === myX);\r\n  }\r\n\r\n  // get the non-zero (taken) numbers that are in the same row as myIndex\r\n  getTakenByRow(idea: number[], myIndex: number): number[] {\r\n    // which row?\r\n    const myY = Math.floor(myIndex / 9) ;\r\n    // what are the numbers in my col?\r\n    return idea.filter((value, index) => Math.floor(index / 9) === myY);\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/DTM/SudokuSolver/sudoku-solver/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/DTM/SudokuSolver/sudoku-solver/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/DTM/SudokuSolver/sudoku-solver/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/DTM/SudokuSolver/sudoku-solver/src/main.ts"],"sourceRoot":"webpack:///"}